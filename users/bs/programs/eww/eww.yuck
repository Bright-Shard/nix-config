(defvar isLaptop false)
(defpoll batteryIcon
	:interval "1s"
	`
	CHARGE=$(cat /sys/class/power_supply/BAT1/capacity)
	STATUS=$(cat /sys/class/power_supply/BAT1/status)
	if [ $STATUS = "Charging" ]; then
		echo ""
	else
		case $CHARGE in
			9? | 8?)
				echo ""
			;;
			6? | 7?)
				echo ""
			;;
			4? | 5?)
				echo ""
			;;
			2? | 3?)
				echo ""
			;;
			? | 1?)
				echo ""
			;;
		esac
	fi
	`
)
(defpoll time
	:interval "1s"
	`date +%H:%M`
)
(defpoll day
	:interval "300s"
	`date +%a`
)
(defpoll date
	:interval "300s"
	`date +"%b %d"`
)
(defpoll capslock
	:interval ".1s"
	`
	count=0
	for key in /sys/class/leds/input?::capslock; do
		((count = $count + $(cat $key/brightness)))
	done
	echo $count
	`
)
(defpoll powerProfile
	:interval ".1s"
	`tuned-adm active | cut -d ' ' -f 4`
)
(deflisten hyprlandState
	:initial `{
		"workspaces": [ 1 ],
		"activeWorkspace": 1
	}`
	`
	socat -U - UNIX-CONNECT:$XDG_RUNTIME_DIR/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock |
	while read -r line; do
		echo "{
			\"workspaces\": $(hyprctl workspaces -j | jq -Mc map\(.id\)),
			\"activeWorkspace\": $(hyprctl activeworkspace -j | jq -Mc .id)
		}" | jq -Mc
	done
	`
)

(defwidget top []
	(box
		:orientation "v"
		:class "top"
		:spacing 0
		:space-evenly false
		:valign "start"

		(label :text day)
		(label :text date)
		(label :text time)
	)
)
(defwidget mid []
	(box
		:orientation "v"
		:class "mid"
		:spacing 0
		:space-evenly false
		:valign "center"

		(box
			:orientation "v"
			(for workspace in { hyprlandState.workspaces }
				(button
					:onclick "hyprctl dispatch workspace ${workspace}"
					:hexpand true
					:height 50
					:class {
							workspace == hyprlandState.activeWorkspace ?
							"workspaceButton activeWorkspaceButton" : "workspaceButton"
						}
					""
				)
			)
		)
	)
)
(defwidget btm []
	(box
		:orientation "v"
		:class "btm"
		:spacing 0
		:space-evenly false
		:valign "end"

		(label :text "󱐋 ${powerProfile}")
		(label :text "󰌌 ${capslock > 0 ? "A" : "a"}")

		; The complicated logic is to put a 0 in front of
		; single-digit percents
		; Otherwise the CPU and RAM icons get ever so slightly
		; misaligned since the text is centered
		(label :text " ${round(EWW_CPU.avg, 1) < 10 ? "0${round(EWW_CPU.avg, 1)}" : round(EWW_CPU.avg, 1)}%")

		(label :text " ${round(EWW_RAM.used_mem_perc, 1) < 10 ? "0${round(EWW_RAM.used_mem_perc, 1)}" : round(EWW_RAM.used_mem_perc, 1)}%")

		(label
			:text "${batteryIcon} ${EWW_BATTERY.BAT1.capacity < 10 ? "0${EWW_BATTERY.BAT1.capacity}" : EWW_BATTERY.BAT1.capacity}%  "
			; Hide it on desktop computers
			:style { !isLaptop ? "font-size: 0px;" : "" }
		)
	)
)

(defwindow bar
   :monitor 0
   :geometry (geometry
   	:x "12px"
      :height "100%"
      :anchor "left center"
   )
   :stacking "fg"
   :focusable false
   :exclusive true
	(box
		:orientation "v"
		:class "main"
		:space-evenly true

		(top :valign "start")
		(mid :valign "center")
		(btm :valign "end")
	)
)
